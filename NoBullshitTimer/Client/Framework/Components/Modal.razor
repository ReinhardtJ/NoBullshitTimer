@if (IsVisible)
{
<div class="fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center">
    <div class="dark:bg-slate-800 rounded-lg shadow-lg w-96 p-6" @onclick:stopPropagation>
        <div class="mb-4">
            <h3 class="text-xl font-semibold">@Title</h3>
        </div>
        <div class="mb-6">
            @ChildContent
        </div>
        <div class="items-center px-4 py-3">
            <Button @onclick="CloseModal">
                Close
            </Button>
        </div>
    </div>
</div>
}
@* class="px-4 py-2 bg-blue-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-300"> *@

@code {
[Parameter]
public bool IsVisible { get; set; }

[Parameter]
public EventCallback<bool> IsVisibleChanged { get; set; }

[Parameter]
public string Title { get; set; } = "Modal Title";

[Parameter]
public RenderFragment ChildContent { get; set; }

private Task CloseModal()
{
return IsVisibleChanged.InvokeAsync(false);
}
}
