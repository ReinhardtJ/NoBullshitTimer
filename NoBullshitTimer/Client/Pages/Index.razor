@namespace NoBullshitTimer.Client.Pages

@page "/"
@using NoBullshitTimer.Client.Application
@using NoBullshitTimer.Client.Domain
@using NoBullshitTimer.Client.Framework
@using NoBullshitTimer.Client.UI.Components.Application
@implements IDisposable

<PageTitle>Index</PageTitle>
<div class="dark:text-slate-100 p-12">
    <div class="max-lg:hidden pb-24 max-w-sm">
        <h1 class="text-2xl">NoBullshitTimer</h1>
        <p>An interval timer that just works*</p>
        <p>no ads, no subscription, no annoying UI, no unnecessary features, every device, open source and simply: <b>no bullshit</b></p>
        <br />
        <VoicePackSelect
            AudioPlayer="_audioPlayer"
        ></VoicePackSelect>
    </div>
    <div class="max-w-screen-sm mx-auto">
        <TimerInfo />
        <WorkoutManager />
        <p class="mt-4">
            *please note that this is an early version of this software, so
            certain things might <i>not</i> work perfectly
        </p>
    </div>
</div>

@inject IJSRuntime JsRuntime
@inject IntervalTimer Timer
@inject IWorkoutStore WorkoutStore

@code {
    AudioPlayer _audioPlayer;
    private void OnTimerStateChanged()
    {
        _audioPlayer?.PlaySoundIfNecessary(Timer, WorkoutStore);
        InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        Timer.OnTimerStateChanged += OnTimerStateChanged;
        _audioPlayer = new AudioPlayer(
            async fileName => await JsRuntime.InvokeVoidAsync("playSound", $"util/audio/{fileName}")
        );
    }

    public void Dispose()
    {
        Timer.OnTimerStateChanged -= OnTimerStateChanged;
        Timer.Dispose();
    }
}
