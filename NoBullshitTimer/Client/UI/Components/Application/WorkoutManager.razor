@using NoBullshitTimer.Client.Application
@using NoBullshitTimer.Client.Components
@using NoBullshitTimer.Client.Domain
@using NoBullshitTimer.Client.UI.Components.Generic
<div>
    <h1 class="text-2xl pb-5">Manage Workouts</h1>
    <div class="flex flex-col">
        @foreach (var workout in WorkoutStore.AllWorkouts)
        {
            <WorkoutCard Workout="workout"></WorkoutCard>
        }
    </div>

</div>
<Modal @bind-IsVisible="ShowSaveWorkoutModal" Title="Save Current Workout">
    <div class="mb-6">Save the currently applied workout</div>
</Modal>


@inject IntervalTimer Timer
@inject IWorkoutRepository WorkoutRepository
@inject IWorkoutStore WorkoutStore

@code {

    private void SaveWorkoutPlan()
    {
        WorkoutRepository.Add(WorkoutStore.SelectedWorkout);
        SelectedWorkout = AllWorkouts.Find(
            dropdownItem => dropdownItem.Label == dropdownItem.Value.Name
        );
        ShowSaveWorkoutModal = false;
    }

    private DropdownItem<Workout>? SelectedWorkout { get; set; }
    private List<DropdownItem<Workout>> AllWorkouts => WorkoutRepository
        .GetAllWorkouts()
        .Select(workout => new DropdownItem<Workout>(workout.Name, workout))
        .ToList();


    private void LoadSelectedWorkout()
    {
        if (SelectedWorkout == null)
            return;

        WorkoutStore.SelectedWorkout = SelectedWorkout.Value;
    }

    private bool ShowSaveWorkoutModal { get; set; }
    private void OpenSaveWorkoutModal()
    {
        ShowSaveWorkoutModal = true;
    }



    private async Task OnSelectedWorkoutPlanChanged(DropdownItem<Workout> newSelectedWorkout)
    {
        SelectedWorkout = newSelectedWorkout;
    }
}